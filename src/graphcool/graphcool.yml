# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Project.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just uncomment it and run `graphcool deploy`
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Here are the reference docs of this definition format:
# https://docs-next.graph.cool/reference/basics/project-configuration-opheidaix3
#
# Happy Coding!

types: ./types.graphql

# Your root tokens used for functions to get full access to the API
# Read more here:
# https://docs-next.graph.cool/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens:
- cloudFunctionsRootToken


# Organize your code into modules
# You can find modules from the community here:
# https://github.com/graphcool/modules
# modules: {}

functions:
    # signup:
    #     handler:
    #         code:
    #             src: ./functions/signup/signup.ts
    #     type: resolver
    #     schema: ./functions/signup/signup.graphql
    # authenticate:
    #     handler:
    #         code:
    #             src: ./functions/authenticate/authenticate.ts
    #     type: resolver
    #     schema: ./functions/authenticate/authenticate.graphql
    # add-lti-user:
    #     handler:
    #         code:
    #             src: ./functions/add-lti-user/add-lti-user.js
    #     type: resolver
    #     schema: ./functions/add-lti-user/add-lti-user.graphql
    # course-payment:
    #     handler:
    #         code:
    #             src: ./functions/course-payment/course-payment.js
    #             environment:
    #                 STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    #     type: resolver
    #     schema: ./functions/course-payment/course-payment.graphql
    # request-password-reset:
    #     handler:
    #         code:
    #             src: ./functions/request-password-reset/request-password-reset.js
    #             environment:
    #                 MAILGUN_API_KEY: ${env:MAILGUN_API_KEY}
    #     type: resolver
    #     schema: ./functions/request-password-reset/request-password-reset.graphql
    # reset-password:
    #     handler:
    #         code:
    #             src: ./functions/reset-password/reset-password.js
    #     type: resolver
    #     schema: ./functions/reset-password/reset-password.graphql
    assignment-lti-launch:
        handler:
            code:
                src: ./functions/assignment-lti-launch/assignment-lti-launch.ts
                environment:
                    PRENDUS_LTI_SECRET: ${env:PRENDUS_LTI_SECRET}
                    PRENDUS_CLIENT_ORIGIN: ${env:PRENDUS_CLIENT_ORIGIN}
                    PRENDUS_CLIENT_DOMAIN: ${env:PRENDUS_CLIENT_DOMAIN}
                    PRENDUS_JWT_SECRET: ${env:PRENDUS_JWT_SECRET}
        context:
            rootToken: cloudFunctionsRootToken
        type: resolver
        schema: ./functions/assignment-lti-launch/assignment-lti-launch.graphql
    assignment-lti-grade:
        handler:
            code:
                src: ./functions/assignment-lti-grade/assignment-lti-grade.ts
                environment:
                    PRENDUS_JWT_SECRET: ${env:PRENDUS_JWT_SECRET}
        context:
            rootToken: cloudFunctionsRootToken
        type: resolver
        schema: ./functions/assignment-lti-grade/assignment-lti-grade.graphql

permissions:

#### File Permissions

# File Create
- operation: File.create

# File Read
- operation: File.read

# File Update
- operation: File.update

# File Delete
- operation: File.delete

#### User Permissions

# User Create
- operation: User.create

# User Read
- operation: User.read
  fields:
    - id

- operation: User.read
  fields:
    - role
    - email
  authenticated: true
  query: ./permission-queries/user/user-read-role-email.graphql

# User Update
- operation: User.update
  authenticated: true
  query: ./permission-queries/user/user-update-all.graphql

- operation: User.update
  fields:
    - role
  authenticated: true
  query: ./permission-queries/user/user-update-role.graphql

# User Delete
- operation: User.delete
  authenticated: true
  query: ./permission-queries/user/user-delete.graphql

#### Course Permissions

# Course Create
- operation: Course.create
  authenticated: true
  query: ./permission-queries/course/course-create.graphql

# Course Read
- operation: Course.read
  fields:
    - id

- operation: Course.read
  authenticated: true
  query: ./permission-queries/course/course-read-all.graphql

- operation: Course.read
  fields:
    - title
    - price
  authenticated: true
  query: ./permission-queries/course/course-read-title-price.graphql

# Course Update
- operation: Course.update
  fields:
    - title
    - description
    - dueDate
  authenticated: true
  query: ./permission-queries/course/course-update-title-description-duedate.graphql

# Course Delete
- operation: Course.delete
  authenticated: true
  query: ./permission-queries/course/course-delete.graphql

#### Assignment Permissions

# Assignment Create
- operation: Assignment.create
  authenticated: true
  query: ./permission-queries/assignment/assignment-create.graphql

# Assignment Read
- operation: Assignment.read
  fields:
    - id

- operation: Assignment.read
  authenticated: true
  query: ./permission-queries/assignment/assignment-read-all.graphql

# Assignment Update
- operation: Assignment.update
  authenticated: true
  query: ./permission-queries/assignment/assignment-update-all.graphql

# Assignment Delete
- operation: Assignment.delete
  authenticated: true
  query: ./permission-queries/assignment/assignment-delete.graphql

#### Quiz Permissions

# Quiz Create
- operation: Quiz.create

# Quiz Read
- operation: Quiz.read

# Quiz Update
- operation: Quiz.update

# Quiz Delete
- operation: Quiz.delete

#### Question Permissions

# Question Create
- operation: Question.create
  authenticated: true

# Question Read
- operation: Question.read
  query: ./permission-queries/question/question-read-all-unauthenticated.graphql

- operation: Question.read
  authenticated: true
  query: ./permission-queries/question/question-read-all-authenticated.graphql

# Question Update
- operation: Question.update
  authenticated: true
  query: ./permission-queries/question/question-update-all.graphql

# Question Delete
- operation: Question.delete
  authenticated: true
  query: ./permission-queries/question/question-delete.graphql

#### QuestionFlag Permissions

# QuestionFlag Create
- operation: QuestionFlag.create

# QuestionFlag Read
- operation: QuestionFlag.read

# QuestionFlag Update
- operation: QuestionFlag.update

# QuestionFlag Delete
- operation: QuestionFlag.delete

#### QuestionResponse Permissions

# QuestionResponse Create
- operation: QuestionResponse.create
  authenticated: true
  query: ./permission-queries/question-response/question-response-create.graphql

# QuestionResponse Read
- operation: QuestionResponse.read
  authenticated: true
  query: ./permission-queries/question-response/question-response-read-all.graphql

# QuestionResponse Update
# QuestionResponse Delete

#### UserEssay Permissions

# UserEssay Create
- operation: UserEssay.create

# UserEssay Read
- operation: UserEssay.read

# UserEssay Update
- operation: UserEssay.update

# UserEssay Delete
- operation: UserEssay.delete

#### UserVariable Permissions

# UserVariable Create
- operation: UserVariable.create

# UserVariable Read
- operation: UserVariable.read

# UserVariable Update
- operation: UserVariable.update

# UserVariable Delete
- operation: UserVariable.delete

#### UserInput Permissions

# UserInput Create
- operation: UserInput.create

# UserInput Read
- operation: UserInput.read

# UserInput Update
- operation: UserInput.update

# UserInput Delete
- operation: UserInput.delete

#### UserCheck Permissions

# UserCheck Create
- operation: UserCheck.create

# UserCheck Read
- operation: UserCheck.read

# UserCheck Update
- operation: UserCheck.update

# UserCheck Delete
- operation: UserCheck.delete

#### UserRadio Permissions

# UserRadio Create
- operation: UserRadio.create

# UserRadio Read
- operation: UserRadio.read

# UserRadio Update
- operation: UserRadio.update

# UserRadio Delete
- operation: UserRadio.delete

#### QuestionRating Permissions

# QuestionRating Create
- operation: QuestionRating.create
  authenticated: true
  query: ./permission-queries/question-rating/question-rating-create.graphql

# QuestionRating Read
- operation: QuestionRating.read

# QuestionRating Update
- operation: QuestionRating.update
  authenticated: true
  query: ./permission-queries/question-rating/question-rating-update-all.graphql

# QuestionRating Delete
- operation: QuestionRating.delete

#### QuestionResponseRating Permissions

# QuestionResponseRating Create
- operation: QuestionResponseRating.create

# QuestionResponseRating Read
- operation: QuestionResponseRating.read

# QuestionResponseRating Update
- operation: QuestionResponseRating.update

# QuestionResponseRating Delete
- operation: QuestionResponseRating.delete

#### CategoryScore Permissions

# CategoryScore Create
- operation: CategoryScore.create

# CategoryScore Read
- operation: CategoryScore.read

# CategoryScore Update
- operation: CategoryScore.update

# CategoryScore Delete
- operation: CategoryScore.delete

#### AnswerComment Permissions

# AnswerComment Create
- operation: AnswerComment.create

# AnswerComment Read
- operation: AnswerComment.read

# AnswerComment Update
- operation: AnswerComment.update

# AnswerComment Delete
- operation: AnswerComment.delete

#### Discipline Permissions

# Discipline Create
- operation: Discipline.create
  authenticated: true
  query: ./permission-queries/discipline/discipline-create.graphql

# Discipline Read
- operation: Discipline.read

# Discipline Update
- operation: Discipline.update
  authenticated: true
  query: ./permission-queries/discipline/discipline-update-all-1.graphql

- operation: Discipline.update
  authenticated: true
  query: ./permission-queries/discipline/discipline-update-all-2.graphql

# Discipline Delete
- operation: Discipline.delete
  authenticated: true
  query: ./permission-queries/discipline/discipline-delete.graphql

#### Subject Permissions

# Subject Create
- operation: Subject.create
  authenticated: true
  query: ./permission-queries/subject/subject-create.graphql

# Subject Read
- operation: Subject.read

# Subject Update
- operation: Subject.update
  authenticated: true
  query: ./permission-queries/subject/subject-update-all-1.graphql

- operation: Subject.update
  authenticated: true
  query: ./permission-queries/subject/subject-update-all-2.graphql

# Subject Delete
- operation: Subject.delete
  authenticated: true
  query: ./permission-queries/subject/subject-delete.graphql

#### Concept Permissions

# Concept Create
- operation: Concept.create
  authenticated: true

# Concept Read
- operation: Concept.read

# Concept Update
- operation: Concept.update
  authenticated: true

# Concept Delete
- operation: Concept.delete
  authenticated: true
  query: ./permission-queries/concept/concept-delete.graphql

#### LTIUser Permissions
# LTIUser Create
# LTIUser Read
# LTIUser Update
# LTIUser Delete

#### PrendusAnalytics Permissions

# PrendusAnalytics Create
- operation: PrendusAnalytics.create
  authenticated: true

# PrendusAnalytics Read
- operation: PrendusAnalytics.read
  authenticated: true
  query: ./permission-queries/prendus-analytics/prendus-analytics-read-all.graphql

# PrendusAnalytics Update
- operation: PrendusAnalytics.update
  authenticated: true

# PrendusAnalytics Delete
- operation: PrendusAnalytics.delete
  authenticated: true
  query: ./permission-queries/prendus-analytics/prendus-analytics-delete.graphql

#### Purchase Permissions

# Purchase Create

# Purchase Read
- operation: Purchase.read
  fields:
    - id

- operation: Purchase.read
  authenticated: true
  query: ./permission-queries/purchase/purchase-read-all.graphql

# Purchase Update
# Purchase Delete
