# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Project.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just uncomment it and run `graphcool deploy`
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Here are the reference docs of this definition format:
# https://docs-next.graph.cool/reference/basics/project-configuration-opheidaix3
#
# Happy Coding!

types: ./types.graphql

functions:
    signup:
        handler:
            code:
                src: ./functions/signup/signup.js
        type: resolver
        schema: ./functions/signup/signup.graphql
    authenticate:
        handler:
            code:
                src: ./functions/authenticate/authenticate.js
        type: resolver
        schema: ./functions/authenticate/authenticate.graphql
    add-lti-user:
        handler:
            code:
                src: ./functions/add-lti-user/add-lti-user.js
        type: resolver
        schema: ./functions/add-lti-user/add-lti-user.graphql
    course-payment:
        handler:
            code:
                src: ./functions/course-payment/course-payment.js
                environment:
                    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
        type: resolver
        schema: ./functions/course-payment/course-payment.graphql
    request-password-reset:
        handler:
            code:
                src: ./functions/request-password-reset/request-password-reset.js
                environment:
                    MAILGUN_API_KEY: ${env:MAILGUN_API_KEY}
        type: resolver
        schema: ./functions/request-password-reset/request-password-reset.graphql
    reset-password:
        handler:
            code:
                src: ./functions/reset-password/reset-password.js
        type: resolver
        schema: ./functions/reset-password/reset-password.graphql

permissions:

# File Permissions

# File Create
- operation: File.create

# File Read
- operation: File.read

# File Update
- operation: File.update

# File Delete
- operation: File.delete

# User Permissions

# User Create

- operation: User.create

# User Read

- operation: User.read
  fields:
    - id

- operation: User.read
  fields:
    - role
    - email
  authenticated: true
  query: ./permission-queries/user/user-read-role-email.graphql

# User Update

- operation: User.update
  authenticated: true
  query: ./permission-queries/user/user-update-all.graphql

- operation: User.update
  fields:
    - role
  authenticated: true
  query: ./permission-queries/user/user-update-role.graphql

# User Delete

- operation: User.delete
  authenticated: true
  query: ./permission-queries/user/user-delete.graphql

# Course Permissions

# Course Create

- operation: Course.create
  authenticated: true
  query: ./permission-queries/course/course-create.graphql

# Course Read

- operation: Course.read
  fields:
    - id

- operation: Course.read
  authenticated: true
  query: ./permission-queries/course/course-read-all.graphql

- operation: Course.read
  fields:
    - title
    - price
  authenticated: true
  query: ./permission-queries/course/course-read-title-price.graphql

# Course Update

- operation: Course.update
  fields:
    - title
    - description
    - dueDate
  authenticated: true
  query: ./permission-queries/course/course-update-title-description-duedate.graphql

# Course Delete

- operation: Course.delete
  authenticated: true
  query: ./permission-queries/course/course-delete.graphql

# Assignment Permissions
# Assignment Create
# Assignment Read
# Assignment Update
# Assignment Delete

# Quiz Permissions
# Quiz Create
# Quiz Read
# Quiz Update
# Quiz Delete

# Question Permissions
# Question Create
# Question Read
# Question Update
# Question Delete

# QuestionFlag Permissions
# QuestionFlag Create
# QuestionFlag Read
# QuestionFlag Update
# QuestionFlag Delete

# QuestionResponse Permissions
# QuestionResponse Create
# QuestionResponse Read
# QuestionResponse Update
# QuestionResponse Delete

# UserEssay Permissions
# UserEssay Create
# UserEssay Read
# UserEssay Update
# UserEssay Delete

# UserVariable Permissions
# UserVariable Create
# UserVariable Read
# UserVariable Update
# UserVariable Delete

# UserInput Permissions
# UserInput Create
# UserInput Read
# UserInput Update
# UserInput Delete

# UserCheck Permissions
# UserCheck Create
# UserCheck Read
# UserCheck Update
# UserCheck Delete

# UserRadio Permissions
# UserRadio Create
# UserRadio Read
# UserRadio Update
# UserRadio Delete

# QuestionRating Permissions
# QuestionRating Create
# QuestionRating Read
# QuestionRating Update
# QuestionRating Delete

# QuestionResponseRating Permissions
# QuestionResponseRating Create
# QuestionResponseRating Read
# QuestionResponseRating Update
# QuestionResponseRating Delete

# CategoryScore Permissions
# CategoryScore Create
# CategoryScore Read
# CategoryScore Update
# CategoryScore Delete

# AnswerComment Permissions
# AnswerComment Create
# AnswerComment Read
# AnswerComment Update
# AnswerComment Delete

# Discipline Permissions
# Discipline Create
# Discipline Read
# Discipline Update
# Discipline Delete

# Subject Permissions
# Subject Create
# Subject Read
# Subject Update
# Subject Delete

# Concept Permissions
# Concept Create
# Concept Read
# Concept Update
# Concept Delete

# LTIUser Permissions
# LTIUser Create
# LTIUser Read
# LTIUser Update
# LTIUser Delete

# PrendusAnalytics Permissions
# PrendusAnalytics Create
# PrendusAnalytics Read
# PrendusAnalytics Update
# PrendusAnalytics Delete

# Purchase Permissions
# Purchase Create
# Purchase Read
# Purchase Update
# Purchase Delete

# Your root tokens used for functions to get full access to the API
# Read more here:
# https://docs-next.graph.cool/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens: [cloudFunctionsRootToken]


# Organize your code into modules
# You can find modules from the community here:
# https://github.com/graphcool/modules
modules: {}
