# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Project.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just uncomment it and run `graphcool deploy`
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Here are the reference docs of this definition format:
# https://docs-next.graph.cool/reference/basics/project-configuration-opheidaix3
#
# Happy Coding!

types: ./types.graphql

functions:
    signup:
        handler:
            code:
                src: ./functions/signup/signup.js
        type: resolver
        schema: ./functions/signup/signup.graphql
    authenticate:
        handler:
            code:
                src: ./functions/authenticate/authenticate.js
        type: resolver
        schema: ./functions/authenticate/authenticate.graphql
    add-lti-user:
        handler:
            code:
                src: ./functions/add-lti-user/add-lti-user.js
        type: resolver
        schema: ./functions/add-lti-user/add-lti-user.graphql
    course-payment:
        handler:
            code:
                src: ./functions/course-payment/course-payment.js
                environment:
                    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
        type: resolver
        schema: ./functions/course-payment/course-payment.graphql
    request-password-reset:
        handler:
            code:
                src: ./functions/request-password-reset/request-password-reset.js
                environment:
                    MAILGUN_API_KEY: ${env:MAILGUN_API_KEY}
        type: resolver
        schema: ./functions/request-password-reset/request-password-reset.graphql
    reset-password:
        handler:
            code:
                src: ./functions/reset-password/reset-password.js
        type: resolver
        schema: ./functions/reset-password/reset-password.graphql

permissions:

# User Permissions

- operation: User.create

- operation: User.read
  fields:
    - id

- operation: User.read
  fields:
    - role
    - email
  authenticated: true
  query: ./permission-queries/user/user-read-role-email.graphql

- operation: User.update
  authenticated: true
  query: ./permission-queries/user/user-update-all.graphql

- operation: User.update
  fields:
    - role
  authenticated: true
  query: ./permission-queries/user/user-update-role.graphql

- operation: User.delete
  authenticated: true
  query: ./permission-queries/user/user-delete.graphql

# Course Permissions

- operation: Course.create

# Your root tokens used for functions to get full access to the API
# Read more here:
# https://docs-next.graph.cool/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens: [cloudFunctionsRootToken]


# Organize your code into modules
# You can find modules from the community here:
# https://github.com/graphcool/modules
modules: {}
