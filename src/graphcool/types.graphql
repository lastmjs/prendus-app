type File @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  contentType: String!
  name: String!
  secret: String! @isUnique
  size: Int!
  url: String! @isUnique
  question: Question @relation(name: "ImagesOnQuestions")
}

type User @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  ownedCourses: [Course!]! @relation(name: "AuthorOnCourse")
  ownedAssignments: [Assignment!]! @relation(name: "AuthorOnAssignment")
  ownedQuizzes: [Quiz!]! @relation(name: "AuthorOnQuiz")
  ownedQuestions: [Question!]! @relation(name: "AuthorOnQuestion")
  ownedQuestionResponses: [QuestionResponse!]! @relation(name: "AuthorOnQuestionResponse")
  ownedQuestionResponseRatings: [QuestionResponseRating!]! @relation(name: "RaterOnQuestionResponseRating")
  email: String @isUnique
  password: String
  role: UserRole! @defaultValue(value: STUDENT)
  enrolledCourses: [Course!]! @relation(name: "StudentsAndCourses")
  ltiUsers: [LTIUser!]! @relation(name: "UserOnLTIUser")
  questionRatings: [QuestionRating!]! @relation(name: "RaterOnQuestionRating")
  userAnalytics: [PrendusAnalytics!]! @relation(name: "UserOnPrendusAnalytics")
  purchases: [Purchase!]! @relation(name: "UserPurchases")
  institution: [Institution!]! @relation(name: "UsersInstitution")
  createAssignmentEditorChosen: Boolean! @defaultValue(value: true)
}

type Course @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  assignments: [Assignment!]! @relation(name: "CourseOnAssignment")
  description: String
  dueDate: DateTime
  author: User! @relation(name: "AuthorOnCourse")
  discipline: Discipline @relation(name: "CourseDiscipline")
  subject: Subject @relation(name: "CourseSubject")
  enrolledStudents: [User!]! @relation(name: "StudentsAndCourses")
  price: Int! @defaultValue(value: 1000)
  purchases: [Purchase!]! @relation(name: "CoursePurchased")
  analytics: [PrendusAnalytics!]! @relation(name: "CourseOnPrendusAnalytics")
}

type Assignment @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  course: Course @relation(name: "CourseOnAssignment")
  author: User! @relation(name: "AuthorOnAssignment")
  questions: [Question!]! @relation(name: "AssignmentQuestions")
  questionType: QuestionType! @defaultValue(value: MULTIPLE_CHOICE)
  concepts: [Concept!]! @relation(name: "AssignmentOnConcepts")
  quiz: Quiz @relation(name: "AssignmentOnQuiz")
  numCreateQuestions: Int! @defaultValue(value: 1)
  numReviewQuestions: Int! @defaultValue(value: 3)
  numResponseQuestions: Int! @defaultValue(value: 10)
  numGradeResponses: Int! @defaultValue(value: 3)
  analytics: [PrendusAnalytics!]! @relation(name: "AssignmentOnPrendusAnalytics")
}

type Quiz @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  author: User! @relation(name: "AuthorOnQuiz")
  questions: [Question!]! @relation(name: "QuizOnQuestion")
  assignment: Assignment @relation(name: "AssignmentOnQuiz")
}

type Question @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  code: String!
  explanation: String
  quiz: Quiz @relation(name: "QuizOnQuestion")
  author: User! @relation(name: "AuthorOnQuestion")
  assignment: Assignment @relation(name: "AssignmentQuestions")
  answerComments: [AnswerComment!]! @relation(name: "QuestionOnAnswerComment")
  responses: [QuestionResponse!]! @relation(name: "QuestionOnQuestionResponse")
  ratings: [QuestionRating!]! @relation(name: "QuestionOnQuestionRating")
  concept: Concept @relation(name: "ConceptOnQuestion")
  resource: String
  images: [File!]! @relation(name: "ImagesOnQuestions")
  visibility: QuestionVisibility! @defaultValue(value: PRIVATE)
  flags: [QuestionFlag!]! @relation(name: "FlagOnQuestion")
  analytics: [PrendusAnalytics!]! @relation(name: "QuestionOnPrendusAnalytics")
  overall: Float! @defaultValue(value: 0)
  language: Float! @defaultValue(value: 0)
  learningCategory: Float! @defaultValue(value: 0)
  conceptAlignment: Float! @defaultValue(value: 0)
  difficulty: Float! @defaultValue(value: 0)
  plagiarism: Float! @defaultValue(value: 0)
  useInTest: Float! @defaultValue(value: 0)
  license: License! @relation(name: "LicenseOnQuestion")
}

type QuestionFlag @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  question: Question! @relation(name: "FlagOnQuestion")
  comment: String!
}

type QuestionResponse @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  author: User! @relation(name: "AuthorOnQuestionResponse")
  userVariables: [UserVariable!]! @relation(name: "UserVariablesOnQuestionResponse")
  userInputs: [UserInput!]! @relation(name: "UserInputsOnQuestionResponse")
  userEssays: [UserEssay!]! @relation(name: "UserEssaysOnQuestionResponse")
  userChecks: [UserCheck!]! @relation(name: "UserChecksOnQuestionResponse")
  userRadios: [UserRadio!]! @relation(name: "UserRadiosOnQuestionResponse")
  ratings: [QuestionResponseRating!]! @relation(name: "RatingsOnQuestionResponse")
  question: Question! @relation(name: "QuestionOnQuestionResponse")
}

type UserEssay @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  varName: String!
  value: String!
  questionResponse: QuestionResponse! @relation(name: "UserEssaysOnQuestionResponse")
}

type UserVariable @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  varName: String!
  value: Float!
  questionResponse: QuestionResponse! @relation(name: "UserVariablesOnQuestionResponse")
}

type UserInput @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  varName: String!
  value: String!
  questionResponse: QuestionResponse! @relation(name: "UserInputsOnQuestionResponse")
}

type UserCheck @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  varName: String!
  checked: Boolean!
  questionResponse: QuestionResponse! @relation(name: "UserChecksOnQuestionResponse")
}

type UserRadio @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  varName: String!
  checked: Boolean!
  questionResponse: QuestionResponse! @relation(name: "UserRadiosOnQuestionResponse")
}

type QuestionRating @model {
  id: ID! @isUnique
  scores: [CategoryScore!]! @relation(name: "ScoresOnQuestionRating")
  rater: User! @relation(name: "RaterOnQuestionRating")
  ratingJson: Json
  question: Question! @relation(name: "QuestionOnQuestionRating")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type QuestionResponseRating @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  scores: [CategoryScore!]! @relation(name: "ScoresOnQuestionResponseRating")
  rater: User! @relation(name: "RaterOnQuestionResponseRating")
  questionResponse: QuestionResponse! @relation(name: "RatingsOnQuestionResponse")
}

type CategoryScore @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  category: String!
  score: Int!
  questionRating: QuestionRating @relation(name: "ScoresOnQuestionRating")
  questionResponseRating: QuestionResponseRating @relation(name: "ScoresOnQuestionResponseRating")
}

type AnswerComment @model {
  id: ID! @isUnique
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  question: Question! @relation(name: "QuestionOnAnswerComment")
}

type Discipline @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  subjects: [Subject!]! @relation(name: "DisciplineOnSubject")
  courses: [Course!]! @relation(name: "CourseDiscipline")
  approved: PrendusApproved! @defaultValue(value: TBD)
}

type Subject @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  discipline: Discipline! @relation(name: "DisciplineOnSubject")
  concepts: [Concept!]! @relation(name: "SubjectOnConcept")
  approved: PrendusApproved! @defaultValue(value: TBD)
  courses: [Course!]! @relation(name: "CourseSubject")
}

type Concept @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  subject: Subject! @relation(name: "SubjectOnConcept")
  assignments: [Assignment!]! @relation(name: "AssignmentOnConcepts")
  questions: [Question!]! @relation(name: "ConceptOnQuestion")
}

type LTIUser @model {
  id: ID! @isUnique
  ltiUserId: String! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User! @relation(name: "UserOnLTIUser")
  lisPersonContactEmailPrimary: String!
}

type PrendusAnalytics @model {
    id: ID! @isUnique
    createdAt: DateTime!
    updatedAt: DateTime!
    user: User @relation(name: "UserOnPrendusAnalytics")
    verb: String!
    course: Course @relation(name: "CourseOnPrendusAnalytics")
    assignment: Assignment @relation(name: "AssignmentOnPrendusAnalytics")
    question: Question @relation(name: "QuestionOnPrendusAnalytics")
    contextId: String
    contextType: ContextType
    object: String
}

type Purchase @model {
  id: ID! @isUnique
  user: User! @relation(name: "UserPurchases")
  amount: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  course: Course @relation(name: "CoursePurchased")
  stripeTokenId: String!
}

type LTISession @model {
    id: ID! @isUnique
    ltiUserId: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    serializedOutcomeService: Json!
}
type Institution @model {
    id: ID! @isUnique
    createdAt: DateTime!
    updatedAt: DateTime!
    name: String!
    abbreviation: String
    country: String!
    state: String!
    city: String!
    users: [User!]! @relation(name: "UsersInstitution")
    approved: PrendusApproved! @defaultValue(value: TBD)
  }
type License @model {
    id: ID! @isUnique
    createdAt: DateTime!
    updatedAt: DateTime!
    type: LicenseType!
    questions: [Question!]! @relation(name: "LicenseOnQuestion")
    hyperlink: String!
    description: String!
}

enum UserRole {
  INSTRUCTOR
  STUDENT
  ADMIN
}

enum PrendusApproved {
  YES
  NO
  TBD
}

enum ContextType {
  QUESTION
  ASSIGNMENT
  QUIZ
  COURSE
}

enum QuestionType {
  MULTIPLE_CHOICE
  ESSAY
}

enum QuestionVisibility {
  COURSE
  PUBLIC
  PRIVATE
}

enum LicenseType {
    CC_0_V_1_0
    PRENDUS
}
