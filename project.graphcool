# project: cj36de9q4dem00134bhkwm44r
# version: 167

type File implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  contentType: String!
  name: String!
  secret: String! @isUnique
  size: Int!
  url: String! @isUnique
}

type User implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  ownedCourses: [Course!]! @relation(name: "AuthorOnCourse")
  ownedLessons: [Lesson!]! @relation(name: "AuthorOnLesson")
  ownedAssignments: [Assignment!]! @relation(name: "AuthorOnAssignment")
  ownedQuizzes: [Quiz!]! @relation(name: "AuthorOnQuiz")
  ownedQuestions: [Question!]! @relation(name: "AuthorOnQuestion")
  email: String @isUnique
  password: String
  role: UserRole! @defaultValue(value: STUDENT)
  ltiUser: LTIUser @relation(name: "UserOnLTIUser")
  ltiJWT: String
  enrolledAssignments: [Assignment!]! @relation(name: "StudentsAndAssignments")
}

type Course implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  lessons: [Lesson!]! @relation(name: "CourseOnLesson")
  description: String
  dueDate: DateTime
  author: User! @relation(name: "AuthorOnCourse")
}

type Lesson implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  course: Course! @relation(name: "CourseOnLesson")
  assignments: [Assignment!]! @relation(name: "LessonOnAssignment")
  author: User! @relation(name: "AuthorOnLesson")
}

type Assignment implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  lesson: Lesson! @relation(name: "LessonOnAssignment")
  author: User! @relation(name: "AuthorOnAssignment")
  students: [User!]! @relation(name: "StudentsAndAssignments")
}

type Quiz implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  author: User! @relation(name: "AuthorOnQuiz")
  questions: [Question!]! @relation(name: "QuizOnQuestion")
}

type Question implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  text: String!
  code: String!
  quiz: Quiz @relation(name: "QuizOnQuestion")
  author: User! @relation(name: "AuthorOnQuestion")
}

type Discipline implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  subjects: [Subject!]! @relation(name: "DisciplineOnSubject")
}

type Subject implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  discipline: Discipline! @relation(name: "DisciplineOnSubject")
  concepts: [Concept!]! @relation(name: "SubjectOnConcept")
}

type Concept implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  subject: Subject! @relation(name: "SubjectOnConcept")
}

type LTIUser implements Node {
  id: ID! @isUnique
  ltiUserId: String! @isUnique
  user: User! @relation(name: "UserOnLTIUser")
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserRole {
  INSTRUCTOR
  STUDENT
}